# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Test
on:
  workflow_call:
    inputs:
      ref:
        description: |
          The Git reference to operate on.
        type: string
        required: true
      upload-artifacts:
        description: |
          Whether to upload artifacts.

          Defaults to `true`.
        type: boolean
        required: false
        default: true
      artifact-retention-duration:
        description: |
          The length of time, in days, to retain uploaded artifacts for.

          If set to `0`, defaults to the value configured for the repository.

          Defaults to `0`.
        type: number
        required: false
        default: 0
    outputs:
      artifact-id:
        description: |
          The ID of the artifact generated by the workflow, if any.
        value: ${{jobs.test.outputs.artifact-id}}
      artifact-name:
        description: |
          The name of the artifact generated by the workflow, if any.
        value: ${{jobs.test.outputs.artifact-name}}
      artifact-url:
        description: |
          The download URL of the artifact generated by the workflow, if any.
        value: ${{jobs.test.outputs.artifact-url}}
    secrets:
      github-token:
        description: |
          The token to use for making authenticated requests to GitHub APIs.
        required: true
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    permissions:
      #-- To clone the repository
      contents: read
    outputs:
      artifact-id: ${{steps.upload-artifacts.outputs.artifact-id}}
      artifact-name: test-results
      artifact-url: ${{steps.upload-artifacts.outputs.artifact-url}}
    steps:
      - id: checkout-repository
        name: Checkout repository
        uses: actions/checkout@v5
        with:
          ref: ${{inputs.ref}}
          lfs: true
          submodules: recursive
          show-progress: true
          token: ${{secrets.github-token || secrets.GITHUB_TOKEN}}
      - id: setup-pnpm
        name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - id: setup-nodejs
        name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: pnpm
          cache-dependency-path: ./pnpm-lock.yaml
          token: ${{secrets.github-token || secrets.GITHUB_TOKEN}}
      - id: install-dependencies
        name: Install dependencies
        run: pnpm install
      - id: test
        name: Test
        run: pnpm run test:ci
      - id: upload-artifacts
        name: Upload covrerage artifacts
        if: inputs.upload-artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: ./coverage/
          retention-days: ${{inputs.artifact-retention-duration}}
          if-no-files-found: ignore
